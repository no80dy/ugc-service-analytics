#KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER3

version: "3.9"

x-services:
  &clickhouse-service
  image: clickhouse/clickhouse-server:23
  depends_on:
    - zookeeper

services:
  kafka-0:
    image: bitnami/kafka:3.6
    ports:
     - "9094:29092"
    environment:
     # KRaft settings
     - KAFKA_ENABLE_KRAFT=yes
     - KAFKA_CFG_NODE_ID=0
     - KAFKA_CFG_PROCESS_ROLES=controller,broker
     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
     - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
     # Listeners
     - ALLOW_PLAINTEXT_LISTENER=yes
     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-0:9092,EXTERNAL://localhost:9094
     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT


  kafka-1:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9095:29092"
    environment:
      # KRaft settings
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092,EXTERNAL://localhost:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_1_data:/bitnami/kafka
  kafka-2:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9096:29092"
    environment:
            # KRaft settings
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9093,1@kafka-1:9093,2@kafka-2:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9092,EXTERNAL://localhost:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - kafka_2_data:/bitnami/kafka

  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft

  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    hostname: zookeeper

  clickhouse-node1:
    <<: *clickhouse-service
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./data/node1:/etc/clickhouse-server
      - ./data/node1:/docker-entrypoint-initdb.d

  clickhouse-node2:
    <<: *clickhouse-service
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./data/node2:/etc/clickhouse-server
      - ./data/node2:/docker-entrypoint-initdb.d

  clickhouse-node3:
    <<: *clickhouse-service
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./data/node3:/etc/clickhouse-server
      - ./data/node3:/docker-entrypoint-initdb.d

  clickhouse-node4:
    <<: *clickhouse-service
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    ports:
      - "8126:8123"
      - "9003:9000"
    volumes:
      - ./data/node4:/etc/clickhouse-server
      - ./data/node4:/docker-entrypoint-initdb.d

  ugc_etl:
    build:
      dockerfile: Dockerfile
      context: services/ugc_etl/
    env_file:
      - ./.env.dev
    volumes:
      - ./services/ugc_etl:/app

  movies_ugc:
    build:
      context: services/ugc/src/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./.env.dev

  locust_master:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./services/tests/load:/mnt/locust
    command: -f /mnt/locust/main.py --master -H http://localhost:8000

  locust_worker:
    image: locustio/locust
    volumes:
      - ./services/tests/load:/mnt/locust
    command: -f /mnt/locust/main.py --worker --master-host locust_master

volumes:
  kafka_0_data:
  kafka_1_data:
  kafka_2_data:
